// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// npx prisma migrate dev --name "init" - create migration

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id                 String   @id @default(uuid())
  email              String   @unique
  name               String?
  lastName           String?
  password           String
  createdAt          DateTime @default(now())
  ratings            Ratings[]
  role               String     @default("USER")
  favouriteGenres    UserFavouriteGenres[]
  favouriteBooks     UserFavouriteBooks[]
  favouriteAuthors   UserFavouriteAuthors[]
}

model Authors {
  id                     Int      @id @default(autoincrement())
  name                   String
  lastName               String?
  books                  Books[]
  favouriteAuthors       UserFavouriteAuthors[]
}

model Ratings {
  id        Int       @id @default(autoincrement())
  book      Books     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      Users     @relation(fields: [userId], references: [id])
  userId    String
  comment   String?
  rating    Int
}

model Books {
  id                  Int      @id @default(autoincrement())
  title               String
  description         String?
  isbn                String?
  author              Authors   @relation(fields: [authorId], references: [id])
  authorId            Int
  coverUrl            String?
  ratings             Ratings[]
  genres              BookGenres[]
  favouriteBooks      UserFavouriteBooks[]
}

model Genres {
  id                  Int      @id @default(autoincrement())
  name                String
  books               BookGenres[]
  favouriteGenres     UserFavouriteGenres[]
}

model BookGenres {
  book      Books     @relation(fields: [bookId], references: [id])
  bookId    Int
  genre     Genres    @relation(fields: [genreId], references: [id])
  genreId   Int

  @@id([bookId, genreId])
}

model UserFavouriteGenres {
  user      Users     @relation(fields: [userId], references: [id])
  userId    String
  genre     Genres    @relation(fields: [genreId], references: [id])
  genreId   Int

  @@id([userId, genreId])
}

model UserFavouriteBooks {
  user      Users     @relation(fields: [userId], references: [id])
  userId    String
  book      Books     @relation(fields: [bookId], references: [id])
  bookId    Int

  @@id([userId, bookId])
}

model UserFavouriteAuthors {
  user      Users     @relation(fields: [userId], references: [id])
  userId    String
  author    Authors   @relation(fields: [authorId], references: [id])
  authorId  Int

  @@id([userId, authorId])
}



















